# Generated by Django 4.1.7 on 2023-02-28 13:19

import api.bases.users.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import encrypted_model_fields.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_online', models.PositiveSmallIntegerField(default=0)),
                ('last_password_change', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('deactivated_at', models.DateTimeField(blank=True, editable=False, help_text='탈퇴일', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('site', models.ForeignKey(blank=True, default=api.bases.users.models.get_default_site, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['email'],
                'unique_together': {('email', 'site')},
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, help_text='자원 고유 ID', primary_key=True, serialize=False, unique=True)),
                ('file', models.ImageField(blank=True, height_field='height', help_text='이미지', null=True, upload_to='avatars', width_field='width')),
                ('width', models.PositiveIntegerField(blank=True, help_text='이미지 넓이', null=True)),
                ('height', models.PositiveIntegerField(blank=True, help_text='이미지 높이', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, help_text='이름', max_length=30, verbose_name='name')),
                ('nickname', models.CharField(blank=True, help_text='별명', max_length=30, null=True)),
                ('phone', models.CharField(blank=True, help_text='휴대폰 번호', max_length=20, null=True)),
                ('mobile_carrier', models.CharField(blank=True, choices=[('01', 'SKT'), ('02', 'KT'), ('03', 'LG U+'), ('알뜰폰', [('04', 'SKT'), ('05', 'KT'), ('06', 'LG U+')])], help_text='휴대폰 통신사', max_length=2, null=True)),
                ('ci', encrypted_model_fields.fields.EncryptedCharField(blank=True, help_text='고유식별번호', null=True)),
                ('ci_hash', models.CharField(blank=True, editable=False, help_text='고유 식별번호 Hash값', max_length=64, null=True)),
                ('address', models.CharField(blank=True, help_text='주소', max_length=120, null=True)),
                ('birth_date', models.DateField(blank=True, help_text='생년월일', null=True)),
                ('gender_code', models.PositiveSmallIntegerField(blank=True, choices=[('내국인', [(1, '남(1)'), (2, '여(2)')]), ('외국인', [(3, '남(3)'), (4, '여(4)')])], help_text='성별', null=True)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='avatar', to='users.image')),
            ],
            options={
                'db_table': 'users_user_profile',
            },
        ),
    ]
